<Application x:Class="Project_Manager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"             
             xmlns:m="clr-namespace:ModelsLib.Models;assembly=ModelsLib"
             xmlns:converters="clr-namespace:Project_Manager.Converters"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:customControls="clr-namespace:CustomControlsLibrary;assembly=CustomControlsLibrary"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>

        <!--#region Calendar -->
       
        <!--#endregion-->

        <Style x:Key="GridSplitterVertical" TargetType="GridSplitter">
            <Style.Setters>
                <Setter Property="Background" Value="#aa396c"/>
                <Setter Property="Width" Value="7"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Background" Value="#ff8ba0"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>

        <m:ProjectUrgency x:Key="Projecturgency"/>
        
        <converters:MoneyConverter x:Key="MoneyConverter"/>
        <converters:DateTimeConverter x:Key="DateTimeConverter"/>

        <m:ProjectUrgency x:Key="PU"/>

        <Color x:Key="color1init">#f29699
        </Color>

        <Color x:Key="color2init">#b82962</Color>

        <Color x:Key="tglcolor1init">#FFEC708F
        </Color>

        <Color x:Key="tglcolor2init">#FFC53A6D
        </Color>

        <Color x:Key="tglcolor2on">#f089a0
        </Color>

        <Color x:Key="coloron">#ff8ba0
        </Color>

        <Color x:Key="colorpressed">#ffaec7
        </Color>

        <Color x:Key="tri">Black
        </Color>
                           
        <Style TargetType="ToggleButton" x:Key="tglbtnstyle">
            <Style.Setters>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="ItemsControl.Foreground" Value="White"/>
                <Setter Property="Margin" Value="9"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border BorderThickness="0" CornerRadius="15" 
                                    BorderBrush="#ffaec7"
                                    x:Name="bordertogl">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="{StaticResource tglcolor1init}" Offset="0"/>
                                        <GradientStop Color="{StaticResource tglcolor2init}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"                                                  
                                                  />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetName="bordertogl"
                                                    Storyboard.TargetProperty="Background.GradientStops[0].Color"
                                                    To="{StaticResource color1init}"
                                                    />
                                                <ColorAnimation
                                                    Storyboard.TargetName="bordertogl"
                                                    Storyboard.TargetProperty="Background.GradientStops[1].Color"
                                                    To="{StaticResource color2init}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation
                                                    Storyboard.TargetName="bordertogl"
                                                    Storyboard.TargetProperty="Background.GradientStops[0].Color"
                                                    To="{StaticResource tglcolor2on}"/>
                                                <ColorAnimation
                                                    Storyboard.TargetName="bordertogl"
                                                    Storyboard.TargetProperty="Background.GradientStops[1].Color"
                                                    To="{StaticResource tglcolor2on}"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ThicknessAnimation
                                                    Storyboard.TargetName="bordertogl"
                                                    Storyboard.TargetProperty="BorderThickness"
                                                    Duration="0:0:0.02"
                                                    To="5"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <!--#region Scroll Bar-->

        <Style TargetType="Thumb" x:Key="thumbstyle">
            <Style.Setters>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0,1">
                            <GradientStop Offset="0" Color="#b72962" />
                            <GradientStop Offset="1" Color="#f089a0" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1">
                                <GradientStop Offset="0" Color="#ff8ba0" />
                                <GradientStop Offset="1" Color="#ff8ba0" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Path" x:Key="PathStyle">
            <Style.Setters>
                <Setter Property="Fill" Value="#FF8B0440"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="#ff8ba0"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate TargetType="RepeatButton"
            x:Key="repeatTransTemplate">
            <Rectangle Fill="Transparent" />
        </ControlTemplate>
        
        <ControlTemplate TargetType="RepeatButton"
            x:Key="plainTemplate">
            <Grid>
                <ContentPresenter Margin="{TemplateBinding Padding}" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate TargetType="Thumb" x:Key="vthumbTemplate">
            <Rectangle RadiusX="5" RadiusY="10"
            Stroke="{TemplateBinding BorderBrush}" 
            StrokeThickness="{TemplateBinding BorderThickness}"
            Fill="{TemplateBinding Background}" />
        </ControlTemplate>

        <ControlTemplate TargetType="ScrollBar"
            x:Key="verticalScrollBarTemplate">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Border BorderBrush="Black" BorderThickness="1"
                    Background="#ffcfdc" Grid.Row="1">
                    <Track x:Name="PART_Track" IsDirectionReversed="True">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageUpCommand"
                        Template="{StaticResource repeatTransTemplate}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageDownCommand"
                        Template="{StaticResource repeatTransTemplate}" />
                        </Track.IncreaseRepeatButton>

                        <Track.Thumb>
                            <Thumb Template="{StaticResource vthumbTemplate}"
                                BorderBrush="Black" BorderThickness="1"
                                   Style="{StaticResource thumbstyle}"/>
                        </Track.Thumb>
                    </Track>
                </Border>
                <Viewbox>
                    <RepeatButton Command="{x:Static ScrollBar.LineUpCommand}"
                        Template="{StaticResource plainTemplate}">
                        <Path Data="M 25,0 L 50,50 L 0,50 Z" 
                              Style="{StaticResource PathStyle}"/>
                    </RepeatButton>
                </Viewbox>

                <Viewbox Grid.Row="2">
                    <RepeatButton Command="{x:Static ScrollBar.LineDownCommand}"
                    Template="{StaticResource plainTemplate}">
                        <Path Data="M 25,50 L 0,0 L 50,0 Z" 
                              Style="{StaticResource PathStyle}" />
                    </RepeatButton>
                </Viewbox>
            </Grid>
        </ControlTemplate>


        <ControlTemplate TargetType="ScrollBar"
            x:Key="horizontalScrollBarTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Border BorderBrush="Black" BorderThickness="1"
                    Background="#ffcfdc" Grid.Column="1">
                    <Track x:Name="PART_Track" IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageRightCommand"
                        Template="{StaticResource repeatTransTemplate}" />
                        </Track.DecreaseRepeatButton>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Command="ScrollBar.PageLeftCommand"
                        Template="{StaticResource repeatTransTemplate}" />
                        </Track.IncreaseRepeatButton>

                        <Track.Thumb>
                            <Thumb Template="{StaticResource vthumbTemplate}"
                                BorderBrush="Black" BorderThickness="1"
                                   Style="{StaticResource thumbstyle}"/>
                        </Track.Thumb>
                    </Track>
                </Border>
                <Viewbox>
                    <RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
                        Template="{StaticResource plainTemplate}">
                        <Path Data="M 0,25  L 50,0 L 50,50 Z"                                                             
                              Style ="{StaticResource PathStyle}"/>
                    </RepeatButton>
                </Viewbox>

                <Viewbox Grid.Column="2">
                    <RepeatButton Command="{x:Static ScrollBar.LineRightCommand}"
                    Template="{StaticResource plainTemplate}">
                        <Path Data="M 50,25 L 0,0 L 0,50 Z" 
                              Style ="{StaticResource PathStyle}"/>
                    </RepeatButton>
                </Viewbox>
            </Grid>
        </ControlTemplate>


        <Style TargetType="ScrollBar">
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template"
            Value="{StaticResource verticalScrollBarTemplate}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Template"
            Value="{StaticResource horizontalScrollBarTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--#endregion-->
            <Style x:Key="Tittle" TargetType="{x:Type TextBlock}">
            <Style.Setters>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style.Setters>
        </Style>

        <Style TargetType="{x:Type Label}" x:Key="labelStyle">
            <Style.Setters>
                <Setter Property="ItemsControl.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border  Grid.Row="0" Grid.Column="1" BorderBrush="white" BorderThickness="2"
                     Margin="4">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="1,-1" StartPoint="0,0">
                                        <GradientStop Color="#FFB62660" Offset="0"/>
                                        <GradientStop Color="#FF8B0440" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <TextBlock Text="{TemplateBinding Content}" Style="{StaticResource Tittle}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>

        <Style x:Key="ListViewTitles" TargetType="TextBlock">
            <Style.Setters>
                <Setter Property="ItemsControl.FontSize" Value="20"/>
                <Setter Property="ItemsControl.FontFamily" Value="TimesNewRoman"/>
            </Style.Setters>
        </Style>
        <Style x:Key="Notes" TargetType="StackPanel">
            <Style.Setters>
                <Setter Property="ItemsControl.FontSize" Value="14"/>
                <Setter Property="ItemsControl.FontFamily" Value="TimesNewRoman"/>
                <Setter Property="ItemsControl.Foreground" Value="Black"/>
            </Style.Setters>
        </Style>

        <Style TargetType="{x:Type ListViewItem}" x:Key="ListViewItem">
            <Style.Resources>
                <!-- Foreground for Selected ListViewItem -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" 
                                 Color="Black"/>
                <!-- Background for Selected ListViewItem -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                 Color="{StaticResource ResourceKey=colorpressed}"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                 Color="#FFAA396C"/>
            </Style.Resources>
        </Style>

        <Style x:Key="Rectangle" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill" Value="#aa396c"/>
        </Style>

        


        
        <!--Buttons Template-->
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="ItemsControl.Foreground" Value="White"/>
            <Setter Property="Margin" Value="9"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border BorderBrush="Black" CornerRadius="8" 
                                    x:Name="border">
                            <Border.BorderThickness>
                                <Thickness>
                                    <Thickness.Left>
                                        <sys:Double>3
                                        </sys:Double>
                                    </Thickness.Left>
                                    <Thickness.Right>
                                        <sys:Double>3
                                        </sys:Double>
                                    </Thickness.Right>
                                    <Thickness.Top>
                                        <sys:Double>3
                                        </sys:Double>
                                    </Thickness.Top>
                                    <Thickness.Bottom>
                                        <sys:Double>3
                                        </sys:Double>
                                    </Thickness.Bottom>
                                </Thickness>
                            </Border.BorderThickness>
                            <Border.Background>
                                <RadialGradientBrush GradientOrigin="0.496,1.052" x:Name="BorderGradient"
                                                     >
                                    <RadialGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterX="0.5" CenterY="0.5" 
                                                        ScaleX="1.5" ScaleY="1.5"/>
                                            <TranslateTransform X="0.02" Y="0.3"/>
                                        </TransformGroup>
                                    </RadialGradientBrush.RelativeTransform>
                                    
                                        <GradientStop Offset="1" Color="{StaticResource color1init}"/>
                                    <GradientStop Offset="0.3" Color="{StaticResource color2init}"/>
                                </RadialGradientBrush>
                            </Border.Background>
                            <ContentPresenter                                 
                                HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ColorAnimation 
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="
                                                Background.GradientStops[0].Color"
                                                To="{StaticResource color1init}"/>
                                            <ColorAnimation Storyboard.TargetName="border"
                                                            Storyboard.TargetProperty="
                                                            Background.GradientStops[1].Color"
                                                            To="{StaticResource color2init}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="
                                                Background.GradientStops[0].Color"
                                                To="{StaticResource coloron}"/>
                                            <ColorAnimation
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="
                                                Background.GradientStops[1].Color"
                                                To="{StaticResource coloron}"/>
                                            
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetName="border"
                                                             Storyboard.TargetProperty="
                                                             BorderThickness"
                                                                 Duration='0:0:0.02' 
                                                             To="20">
                                            </ThicknessAnimation>

                                            <ColorAnimation                                                
                                                Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="
                                                BorderBrush.Color"
                                                Duration='0:0:0.02'
                                                To="{StaticResource colorpressed}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                        
                    </ControlTemplate>
                    
                </Setter.Value>
            </Setter>
        </Style>
        <!--Buttons Template-->

        

        <!--ErrorTemplate-->
        <ControlTemplate x:Key="ErrorTemplate">
            <Border BorderBrush="Red" BorderThickness="2">
                <Grid>
                    <AdornedElementPlaceholder x:Name="_al"/>
                    <TextBlock Text="{Binding [0].ErrorContent}"
                               Foreground="Red" HorizontalAlignment="Right"
                               VerticalAlignment="Center" 
                               Margin="0,0,6,0"/>
                </Grid>
            </Border>
        </ControlTemplate>
        <!--ErrorTemplate-->

        <Style x:Key="BorderStyle" TargetType="Border">
            <Style.Setters>
                <Setter Property="ItemsControl.BorderThickness" Value="3"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.Setters>
                        <Setter Property="ItemsControl.Background" Value="Pink"/>
                        <Setter Property="ItemsControl.BorderThickness" Value="5"/>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Datatemplate Project-->

        <Style TargetType="TextBox" x:Key="InputBox">
            <Style.Setters>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="Margin" Value="10,0"/>
            </Style.Setters>
        </Style>

        <Style TargetType="Border" x:Key="BoxBorder">
            <Style.Setters>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="Background" Value="white"/>
                <Setter Property="CornerRadius" Value="14"/>
                <Setter Property="Margin" Value="5"/>
            </Style.Setters>
        </Style>

        <DataTemplate DataType="{x:Type m:Project}">
            <Border  CornerRadius="5" 
                    x:Name="border" Style="{StaticResource BorderStyle}"
                     BorderBrush="{Binding BorderBrushColor, 
                UpdateSourceTrigger=PropertyChanged}" 
                     Background="#FFAA396C" Margin="5">
                <StackPanel Orientation="Vertical" Style="{StaticResource Notes}" 
                            >
                    <Border Style="{StaticResource BoxBorder}">
                        <TextBox Text="{Binding Name, 
                        UpdateSourceTrigger=PropertyChanged, Mode=TwoWay
                        }" Style="{StaticResource InputBox}" TextWrapping="Wrap"
                                 AcceptsReturn="True" AcceptsTab="True"
                                />
                    </Border>
                    <Border Style="{StaticResource BoxBorder}">
                        <TextBox Text="{Binding CustomerName, 
                        UpdateSourceTrigger=PropertyChanged,
                        Mode=TwoWay}" Width="150" TextWrapping="Wrap"
                             AcceptsReturn="True" AcceptsTab="True" MaxLength="30000"
                                 Style="{StaticResource InputBox}"/>
                    </Border>

                   
                        <ToggleButton x:Name="tglbtn"
                                       Margin="5"                                      
                                      Style="{DynamicResource tglbtnstyle}">
                            <ToggleButton.Content>
                                <Grid ShowGridLines="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="5"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="10"/>
                                        <RowDefinition Height="10*"/>
                                        <RowDefinition Height="10"/>
                                    </Grid.RowDefinitions>
                                <Border Style="{StaticResource BoxBorder}"
                                        Grid.Column="0" Grid.Row="1"
                                        Width="{Binding ElementName=cmboxLV, 
                                    Path=SelectedItem.ActualWidth, 
                                    UpdateSourceTrigger=PropertyChanged}"
                                        Height="{Binding ElementName=cmboxLV,
                                    Path=SelectedItem.ActualHeight, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBlock x:Name="CMText" Foreground="Black"
                                        FontSize="20" TextWrapping="Wrap"/>
                                </Border>
                                <Path Fill="White" Grid.Column="1"
                                          Grid.Row="1"
                             Data="M 20,25 L10,10 L20,20 L 30,10 L 20,25 Z"/>
                                </Grid>
                            </ToggleButton.Content>
                        </ToggleButton>
                    <Popup IsOpen="{Binding ElementName=tglbtn, Path=IsChecked,
                        Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           PlacementTarget="{Binding ElementName=tglbtn}" 
                           StaysOpen="False">
                        <ListView x:Name="cmboxLV" Background="#FF8B0440"                                                              
                                  SelectedIndex="{Binding SelectedCBIndex, 
                            UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  >
                            <Border Style="{StaticResource BoxBorder}">
                                <TextBox 
                                    Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                    x:Name="CMI1"
                                    Style="{StaticResource InputBox}"
                                    TextWrapping="Wrap"
                                    AcceptsReturn="True"
                                    AcceptsTab="True"                                    
                                    MaxWidth="200"/>
                            </Border>
                            <Border Style="{StaticResource BoxBorder}"
                                    x:Name="CostBorderTb">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Цена:" FontSize="20"/>
                                    <TextBox Text="{Binding Str_Cost, 
                                    UpdateSourceTrigger=PropertyChanged,
                                    Mode=TwoWay}"
                                             x:Name="CMI2"
                                    Style="{StaticResource InputBox}"
                                          />
                                    <TextBlock Text="Ед." FontSize="20"/>
                                </StackPanel>
                            </Border>

                            <customControls:CustomDatePicker x:Name="CMI3"
                                                             ChosenDate="{Binding Date,
                                UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                             >
                                <customControls:CustomDatePicker.CustomCalendar>
                                    <customControls:CustomCalendar/>
                                </customControls:CustomDatePicker.CustomCalendar>
                            </customControls:CustomDatePicker>

                            <ToggleButton x:Name="tglbtn2"
                                       Margin="5"                                      
                                      Style="{DynamicResource tglbtnstyle}">
                                <ToggleButton.Content>
                                    <Grid ShowGridLines="False">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="155"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="5"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="10"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="10"/>
                                        </Grid.RowDefinitions>
                                        <Border Grid.Column="0" Grid.Row="1" Style="{StaticResource BoxBorder}">
                                            <TextBlock 
                                           Text="{Binding Urgency, UpdateSourceTrigger=PropertyChanged,
                                            Mode=TwoWay}" Foreground="Black" 
                                                       FontSize="20"
                                                       Margin="10,0,0,0"/>
                                        </Border>
                                        <Path Fill="White" Grid.Column="1"
                                          Grid.Row="1"
                             Data="M 20,25 L10,10 L20,20 L 30,10 L 20,25 Z"/>
                                    </Grid>
                                </ToggleButton.Content>
                            </ToggleButton>
                            
                            <Popup IsOpen="{Binding ElementName=tglbtn2, Path=IsChecked,
                                UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                   PlacementTarget="{Binding ElementName=tglbtn2}"
                                   StaysOpen="False">
                                <ListView x:Name="cmListView2" Background="#FF8B0440"
                                          ItemsSource="{StaticResource PU}"
                                          Foreground="White" FontSize="20"
                                          SelectedItem="{Binding Urgency,
                                    UpdateSourceTrigger=PropertyChanged,
                                    Mode=TwoWay}"/>
                            </Popup>
                        </ListView>
                    </Popup>
                    
                    <!--#endregion-->                        
                </StackPanel>
                
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsCostCorrect, 
                    UpdateSourceTrigger=PropertyChanged,
                    Mode=TwoWay}" Value="False">
                    <Setter TargetName="CostBorderTb" 
                            Property="ItemsControl.BorderBrush"
                            Value="OrangeRed"/>
                    <Setter TargetName="CostBorderTb" 
                            Property="ItemsControl.BorderThickness"
                            Value="2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedCBIndex}" Value="0">
                    <Setter TargetName="CMText" Property="Text"
                            Value="{Binding ElementName=CMI1, Path=Text, 
                        UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedCBIndex}" Value="1">
                    <Setter TargetName="CMText" Property="Text"
                            Value="{Binding ElementName=CMI2,
                        Path=Text, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedCBIndex}" Value="2">
                    <Setter TargetName="CMText" Property="Text"
                            Value="{Binding ElementName=CMI3, Path=ChosenDate,
                        UpdateSourceTrigger=PropertyChanged, Mode=OneWay,
                        Converter={StaticResource DateTimeConverter}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedCBIndex}" Value="3">
                    <Setter Property="Text" TargetName="CMText"
                            Value="{Binding ElementName=cmListView2,
                        Path=SelectedItem, UpdateSourceTrigger=PropertyChanged,
                        Mode=OneWay}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <!--Datatemplate Project-->
        <!--Archive Note-->
        <DataTemplate DataType="{x:Type m:ArchiveNote}">
            <Border BorderBrush="Black" BorderThickness="3" Margin="10,4">
                <StackPanel Orientation="Vertical" >
                    <TextBlock Text="{Binding DateEnd, UpdateSourceTrigger=PropertyChanged,
                        StringFormat=Дата_Сдачи_Проекта: {0:dd.MM.yyyy}}"/>
                    <TextBlock Text="{Binding AmountOfDays, UpdateSourceTrigger=PropertyChanged,
                        StringFormat=Кол-во_затраченых_дней: {0:dd}}"/>
                    <TextBlock Text="{Binding ProjectName, UpdateSourceTrigger=PropertyChanged,
                        StringFormat=Имя_Проекта: {0}}"/>
                    <TextBlock Text="{Binding Cost, UpdateSourceTrigger=PropertyChanged,
                        StringFormat=Цена_Проекта: {0} ед.}"/>
                </StackPanel>
            </Border>
        </DataTemplate>
        <!--Archive Note-->

    </Application.Resources>
</Application>
